{"name":"ListViewAnimations","tagline":"Easily add animations to your ListView items!","body":"ListViewAnimations ([Play Store Demo][1])\r\n===========\r\n\r\nListViewAnimations is an Open Source Android library that allows developers to easily create ListViews with animations.\r\nFeel free to use it all you want in your Android apps provided that you cite this project and include the license in your app.\r\n\r\nListViewAnimations uses the [NineOldAndroids][2] library to support devices <3.0.  \r\nIt also uses Roman Nurik's BETA [SwipeDismissListViewTouchListener][5] to support swipe to dismiss.\r\n\r\n**Version 2.0 now supports GridViews! (And other implementations of AbsListView)**\r\n**It also contains an ExpandableListItemAdapter for smoothly expanding your Views!**\r\n\r\nKnown applications using ListViewAnimations\r\n-----\r\n* TreinVerkeer ([Play Store][6])\r\n* Running Coach ([Play Store][9])\r\n* Car Hire ([Play Store][10])\r\n* Voorlees Verhaaltjes ([Play Store][11])\r\n\r\nIf you want your app to be listed as well please contact me via [Google Plus][8]!\r\n\r\nSetup\r\n-----\r\n* In Eclipse, just import the library as an Android library project.\r\n* Project > Clean to generate the binaries you need, like R.java, etc.\r\n* Then, just add ListViewAnimations as a dependency to your existing project and you're good to go!\r\n\r\nOr:\r\n\r\n* [Download the .jar file][4]\r\n* Add the .jar to your project's `libs` folder.\r\n\r\nUsage\r\n-----\r\nThis library uses the [Decorator Pattern][3] to stack multiple `BaseAdapterDecorator`s on each other:\r\n\r\n* Implement your own `BaseAdapter`, or reuse an existing one.\r\n* Stack multiple `BaseAdapterDecorator`s on each other, with your `BaseAdapter` as a base.\r\n* Set the `ListView` to your last `BaseAdapterDecorator`.\r\n* Set your last `BaseAdapterDecorator` to the `ListView`.\r\n\r\nExample:\r\n-----\r\n\r\n\t/* This example will stack two animations on top of eachother */\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\r\n\t\tMyListAdapter mAdapter = new MyListAdapter(this, getItems());\r\n\t\tSwingBottomInAnimationAdapter swingBottomInAnimationAdapter = new SwingBottomInAnimationAdapter(mAdapter);\r\n\t\tSwingRightInAnimationAdapter swingRightInAnimationAdapter = new SwingRightInAnimationAdapter(swingBottomInAnimationAdapter);\r\n\t\t\r\n\t\t// Or in short notation:\r\n\t\tswingRightInAnimationAdapter = \r\n\t\t\tnew SwingRightInAnimationAdapter(\r\n\t\t\t\tnew SwingBottomInAnimationAdapter(\r\n\t\t\t\t\t\tnew MyListAdapter(this, getItems())));\r\n\t\t\r\n\t\t// Assign the ListView to the AnimationAdapter and vice versa\r\n\t\tswingRightInAnimationAdapter.setAbsListView(getListView());\r\n\t\tgetListView().setAdapter(swingRightInAnimationAdapter);\r\n\t}\r\n\t\r\n\tprivate class MyListAdapter extends com.haarman.listviewanimations.ArrayAdapter<String> {\r\n\r\n\t\tprivate Context mContext;\r\n\r\n\t\tpublic MyListAdapter(Context context, ArrayList<String> items) {\r\n\t\t\tsuper(items);\r\n\t\t\tmContext = context;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\r\n\t\t\tTextView tv = (TextView) convertView;\r\n\t\t\tif (tv == null) {\r\n\t\t\t\ttv = (TextView) LayoutInflater.from(mContext).inflate(R.layout.list_row, parent, false);\r\n\t\t\t}\r\n\t\t\ttv.setText(getItem(position));\r\n\t\t\treturn tv;\r\n\t\t}\r\n\t}\r\n\r\nCustom AnimationAdapters\r\n-----\r\nInstead of using the ready-made adapters in the `.swinginadapters.prepared` package, you can also implement your own `AnimationAdapter`.\r\nImplement one of the following classes:\r\n\r\n* `ResourceAnimationAdapter`\r\n* `SingleAnimationAdapter`\r\n* `AnimationAdapter`\r\n\r\nSee the examples.\r\n\r\nDeveloped By\r\n-----\r\n* Niek Haarman\r\n\r\nLicense\r\n-----\r\n\r\n\tCopyright 2013 Niek Haarman\r\n\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\r\n\tyou may not use this file except in compliance with the License.\r\n\tYou may obtain a copy of the License at\r\n\r\n\thttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\tUnless required by applicable law or agreed to in writing, software\r\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\r\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\tSee the License for the specific language governing permissions and\r\n\tlimitations under the License.\r\n\r\n [1]: https://play.google.com/store/apps/details?id=com.haarman.listviewanimations\r\n [2]: http://nineoldandroids.com/\r\n [3]: http://en.wikipedia.org/wiki/Decorator_pattern\r\n [4]: https://github.com/nhaarman/ListViewAnimations/blob/master/com.haarman.listviewanimations-2.0.jar?raw=true\r\n [5]: https://gist.github.com/romannurik/2980593\r\n [6]: https://play.google.com/store/apps/details?id=com.haarman.treinverkeer\r\n [7]: https://www.twitter.com/haarmandev\r\n [8]: https://plus.google.com/106017817931984343451\r\n [9]: https://play.google.com/store/apps/details?id=com.niek.runningapp\r\n [10]: https://play.google.com/store/apps/details?id=com.rentalcars.handset\r\n [11]: https://play.google.com/store/apps/details?id=sa.voorleesVerhaaltjes","google":"UA-39653306-5","note":"Don't delete this file! It's used internally to help with page regeneration."}